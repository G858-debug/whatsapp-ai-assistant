#!/usr/bin/env python3
"""
Generate PR description for auto-fixes
"""

import json
import os


def generate_pr_description():
    """Generate detailed PR description"""
    
    # Load fix summary
    try:
        with open('fix_summary.json', 'r') as f:
            summary = json.load(f)
    except:
        summary = {}
    
    # Load test results
    try:
        with open('test-results.json', 'r') as f:
            test_results = json.load(f)
    except:
        test_results = {}
    
    description = f"""## 🔧 Automated Fix for Conversation Flow Issues

This PR was automatically generated to fix failing conversation flow tests.

### 📊 Test Results
- **Total Tests**: {test_results.get('summary', {}).get('total', 0)}
- **Passed**: {test_results.get('summary', {}).get('passed', 0)}
- **Failed**: {test_results.get('summary', {}).get('failed', 0)}

### 🛠️ Fixes Applied
- **Total Fixes Generated**: {summary.get('total_fixes', 0)}
- **Successfully Applied**: {summary.get('applied', 0)}
- **Failed to Apply**: {summary.get('failed', 0)}

### 📝 Fix Details
"""
    
    # Add details of each applied fix
    applied_fixes = summary.get('applied_fixes', [])
    if applied_fixes:
        for fix in applied_fixes[:10]:  # Limit to first 10
            fix_type = fix.get('type', 'unknown').replace('_', ' ').title()
            description += f"""
#### {fix_type}
- **File**: `{fix.get('file', 'unknown')}`
- **Issue**: {fix.get('diagnosis', 'Issue detected')}
"""
        if len(applied_fixes) > 10:
            description += f"\n...and {len(applied_fixes) - 10} more fixes\n"
    
    # Add file list
    if applied_fixes:
        files = list(set(fix.get('file', '') for fix in applied_fixes if fix.get('file')))
        if files:
            description += "\n### 📂 Files Modified\n"
            for file in files[:10]:
                description += f"- `{file}`\n"
            if len(files) > 10:
                description += f"- ...and {len(files)-10} more\n"
    
    description += """
### 🧪 How to Verify

1. Check the test results in the Actions tab
2. Review the changed files in this PR
3. Test locally if needed:
   ```bash
   python -m pytest tests/ -v
   ```

### ⚠️ Important Notes

- All changes have been backed up in the `backups/` directory
- Original code is preserved in commit history
- Review changes carefully before merging

### 📋 Checklist

- [ ] Tests pass after fixes
- [ ] No unintended side effects
- [ ] Registration flow works correctly
- [ ] Natural language processing improved
- [ ] Phone number formatting fixed
- [ ] Currency handling fixed

---
*This PR was automatically generated by Refiloe's Auto-Fix system*
"""
    
    print(description)


if __name__ == "__main__":
    generate_pr_description()

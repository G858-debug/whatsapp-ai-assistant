@claude Act as multiple specialized agents to fix and optimize each of the following components. Create seamless integration between dashboard actions and WhatsApp notifications.

In services/dashboard_sync.py create:

1. DASHBOARD ACTION TRIGGERS:
When user takes action on dashboard:
- Pre-books challenge → Add confirmation to next digest only
- Joins challenge → No immediate WhatsApp (show success on dashboard)
- Logs progress → Update dashboard only (include in daily summary)
- Changes preferences → Send ONE confirmation message

2. WHATSAPP QUICK COMMANDS:
Simple commands that redirect to dashboard:
- "challenges" → "View all challenges at [dashboard_link]"
- "leaderboard" → "See full rankings at [dashboard_link]"  
- "stats" → "Your detailed stats at [dashboard_link]"

3. DASHBOARD DEEP LINKS:
Generate specific URLs for WhatsApp messages:
- /dashboard/challenges/{challenge_id} - Direct to specific challenge
- /dashboard/leaderboard?highlight={user_id} - Shows user's position
- /dashboard/pre-book/{challenge_id} - One-click pre-booking

4. SYNC MECHANISM:
- Dashboard changes reflect immediately
- WhatsApp logs update dashboard in real-time
- Use websockets or polling for live updates
- Cache user preferences to reduce database calls

5. SMART ROUTING:
If user messages Refiloe about challenges:
- Complex queries → "Easy to see on your dashboard: [link]"
- Simple queries → Answer + "More details on dashboard"
- Progress logs → Confirm + update dashboard

Example flow:
User on dashboard: Pre-books 3 challenges
WhatsApp (next digest): "✓ You're booked for 3 upcoming challenges"
Not: 3 separate booking confirmations

Keep WhatsApp minimal, dashboard comprehensive.

@apply
